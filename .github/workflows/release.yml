name: Run Release Release

on:
  push:
    branches:
      - main

jobs:
  release-package:
    environment: publish
    runs-on: windows-latest
    permissions:
      contents: write # for googleapis/release-please-action to create release commit
      pull-requests: write # for googleapis/release-please-action to create release PR
      packages: read # for internal nuget reading

    steps:
      - uses: google-github-actions/release-please-action@db8f2c60ee802b3748b512940dde88eabd7b7e01 # v3
        id: release
        with:
          command: manifest
          token: ${{secrets.GITHUB_TOKEN}}
          default-branch: main
          release-type: simple

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        if: ${{ steps.release.outputs.releases_created }}
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4
        if: ${{ steps.release.outputs.releases_created }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          global-json-file: global.json
          source-url: https://nuget.pkg.github.com/open-feature/index.json

      - name: Install dependencies
        if: ${{ steps.release.outputs.releases_created }}
        run: dotnet restore

      - name: Build
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          dotnet build --configuration Release --no-restore -p:Deterministic=true

      - name: Pack
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          dotnet pack --configuration Release --no-build

      - name: Publish to Nuget
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          dotnet nuget push --skip-duplicate "**/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key ${{secrets.NUGET_TOKEN}}
